// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model verificationEmail {
  id                String @id @db.VarChar(256)
  code              String @db.VarChar(6)
  requestEmail      String @db.VarChar(50)
  requestPassword   String @db.VarChar(256)
  createdAt         DateTime  @db.Timestamp(3) @default(now())
  expiredAt         DateTime  @db.Timestamp(3)
}

model user {
  idx       Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(50) 
  password  String    @db.VarChar(256)

  createdAt DateTime  @db.Timestamp(3) @default(now())
  updatedAt DateTime? @db.Timestamp(3) @updatedAt()

  refreshToken        refreshToken[]
  colour              colour[]
  favourite           favourite[]
}

model refreshToken {
  refreshToken String    @db.VarChar(250) @unique
  user         user      @relation(fields: [userIdx], references: [idx])
  userIdx      Int
}

model colour {
  idx             Int       @id @default(autoincrement())
  colour          String    @db.VarChar(24)

  createdAt       DateTime  @db.Timestamp(3) @default(now())

  user            user      @relation(fields: [userIdx], references: [idx])
  userIdx         Int

  favouriteCount  Int
  favourite       favourite[]
}

model favourite {
  idx          Int    @id @default(autoincrement())

  user         user   @relation(fields: [userIdx], references: [idx])
  userIdx      Int

  colour       colour @relation(fields: [colourIdx], references: [idx])
  colourIdx    Int
}